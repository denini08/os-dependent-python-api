name: Run Project

on:
  workflow_call:
    inputs:
      project-link:
        required: true
        type: string
      release-name:
        required: true
        type: string
      branch:
        required: true
        type: string
        default: "add_statistics_new"
    secrets: 
      GH_ACCESS_TOKEN:
        required: true 
jobs:
  run-experiment:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    timeout-minutes: 300
    steps:
        - uses: actions/checkout@v4
          with:
            fetch-depth: 0

        # - name: Set up Python
        #   uses: actions/setup-python@v2
        #   with:
        #     token: ${{ secrets.GITHUB_TOKEN }}
        #     python-version: '3.12.8'
              # - name: Set up Python
              
        - name: Check version
          run: python3 --version
    
        - name: clone repo
          run: |
            mkdir -p ./projects
            cd ./projects
            git clone https://${{ secrets.GH_ACCESS_TOKEN }}@github.com/denini08/new-NonDex.git
            cd new-NonDex
            git checkout ${{ inputs.branch }}
            git rev-parse HEAD
            echo "================================================"
            ls -l
            echo "================================================"
          shell: bash

        - name: Setup variables
          run: |
              REPO_URL=$(echo "${{ inputs.project-link }}" | sed 's/;.*//')
              REPO_NAME="${REPO_URL##*/}"  # This strips everything before the last '/' character
              OWNER_NAME="${REPO_URL%/$REPO_NAME}"  # Removes the repo name from the URL, leaving the owner path
              OWNER_NAME="${OWNER_NAME##*/}"  # Extracts only the owner name
              FULL_REPO_NAME="$OWNER_NAME-$REPO_NAME"  # Combines owner and repository names with a dash

              ZIP_FILE="${FULL_REPO_NAME}_results_${{matrix.os}}.zip"
              echo "ZIP_FILE=$ZIP_FILE" >> $GITHUB_ENV
          shell: bash

        - name: Run Experiment
          id: run-experiment-script
          run: |
            # Split the input into link and sha
            IFS=';' read -r url target_sha <<< "${{ inputs.project-link }}"

            cd ./projects/new-NonDex/plugin-system
            chmod +x install_and_run.sh
            ./install_and_run.sh $url $target_sha ${{ matrix.os }}
          shell: bash

        - name: Zip result files
          uses: thedoctor0/zip-release@0.7.5
          with:
            type: 'zip'
            directory: './projects/new-NonDex/plugin-system/results'
            filename: '../../../${{env.ZIP_FILE}}'
    
        - name: Upload result to GitHub Release
          uses: Wandalen/wretry.action@master
          with:
            attempt_delay: 60000 # 1 min
            attempt_limit: 10
            action: softprops/action-gh-release@v1
            with: |
              files: ./projects/${{env.ZIP_FILE}}
              tag_name: ${{ inputs.release-name }}
              name: ${{ inputs.release-name }}
              draft: false
              prerelease: true
              token: ${{ secrets.GITHUB_TOKEN }}
        